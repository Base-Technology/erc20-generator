{"version":3,"sources":["Instructions.jsx","TokenForm.jsx","hooks.js","ExternalLink.jsx","StatusBox.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledDiv","styled","div","_templateObject","_taggedTemplateLiteral","Instructions","React","createElement","role","aria-label","library","add","faQrcode","faWindowClose","CreateTokenButton","button","_templateObject2","TokenField","_ref","values","errors","touched","fieldName","label","placeholder","helpText","maxLength","disabled","optionalButton","optionalExtraControl","className","concat","htmlFor","Field","type","name","id","value","required","TokenForm","_ref2","onSubmit","initialOwner","_useToggle","initialValue","_useState","useState","_useState2","_slicedToArray","setValue","useToggle","_useToggle2","isScanning","toggleScanning","setScanning","onScan","setFieldValue","result","Web3","utils","isAddress","onError","err","console","log","Formik","initialValues","tokenName","tokenSymbol","initialAmount","validate","trim","test","number","parseInt","_ref3","setSubmitting","render","_ref4","Form","noValidate","onClick","title","FontAwesomeIcon","icon","QrReader","key","ExternalLink","href","children","target","rel","Steps","PosedMessage","posed","hidden","y","opacity","visible","ClippedMessage","ProgressMessage","initialPose","pose","StyledSpinner","Spinner","_templateObject3","StatusBox","currentStep","cancelled","transactionHash","etherscanGetter","contractAddress","ownerAddress","getTxURL","getAddressURL","getTokenURL","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","StartButton","web3Options","transactionConfirmationBlocks","getEtherscanURL","networkId","networkPrefix","address","App","web3","setWeb3","_useState3","_useState4","defaultAccount","setDefaultAccount","_useState5","_useState6","setEtherscanGetter","_useState7","_useState8","setCurrentStep","_useState9","_useState10","setCancelled","_useState11","_useState12","data","setData","_useState13","_useState14","setTransactionHash","_useState15","_useState16","contract","setContract","initializeWeb3","_asyncToGenerator","_callee","_web3","accounts","_context","givenProvider","enable","t0","eth","getAccounts","net","getId","apply","arguments","handleTokenCreation","_callee2","_data","erc20","_contract","_context2","symbol","decimals","initialSupply","toString","repeat","Contract","StandardERC20Token","abi","deploy","bytecode","send","from","on","_x","lastRef","useRef","useEffect","current","scrollIntoView","behavior","PoseGroup","Fragment","options","ref","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da1c0550.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  text-align: left;\r\n\r\n  ul {\r\n    list-style-type: none;\r\n    margin: 0rem;\r\n  }\r\n\r\n  ul > li:before {\r\n    content: \"✅ \";\r\n    margin-left: -1.5rem;\r\n  }\r\n`;\r\n\r\nconst Instructions = () => (\r\n  <StyledDiv>\r\n    <ul>\r\n      <li>Fill the information bellow</li>\r\n      <li>Press \"Create Token!\" and pay for the gas</li>\r\n      <li>Wait for the contract to be created on the blockchain</li>\r\n      <li>\r\n        Profit!{\" \"}\r\n        <span role=\"img\" aria-label=\"unicorn\">\r\n          🦄\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </StyledDiv>\r\n);\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport styled from \"styled-components\";\r\nimport Web3 from \"web3\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { useToggle } from \"./hooks\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQrcode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faQrcode);\r\nlibrary.add(faWindowClose);\r\n\r\nconst StyledDiv = styled.div`\r\n  border: 3px solid #ececec;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst CreateTokenButton = styled.button`\r\n  font-family: \"Lucida Console\", Monaco, monospace;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst TokenField = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  fieldName,\r\n  label,\r\n  placeholder,\r\n  helpText,\r\n  maxLength,\r\n  disabled,\r\n  optionalButton,\r\n  optionalExtraControl\r\n}) => (\r\n  <div\r\n    className={`form-group ${\r\n      errors[fieldName] && touched[fieldName] ? \"text-danger\" : null\r\n    }`}\r\n  >\r\n    <label htmlFor={fieldName}>{label}</label>\r\n    <div className=\"input-group\">\r\n      <Field\r\n        className={`form-control ${\r\n          errors[fieldName] && touched[fieldName] ? \"is-invalid\" : null\r\n        }`}\r\n        type=\"text\"\r\n        name={fieldName}\r\n        id={fieldName}\r\n        placeholder={placeholder}\r\n        maxLength={maxLength}\r\n        disabled={disabled}\r\n        value={values[fieldName]}\r\n        required\r\n      />\r\n      {optionalButton}\r\n      {errors[fieldName] && touched[fieldName] && (\r\n        <div className=\"invalid-feedback\">{errors[fieldName]}</div>\r\n      )}\r\n    </div>\r\n    {optionalExtraControl}\r\n    <small className=\"form-text text-muted\">{helpText}</small>\r\n  </div>\r\n);\r\n\r\nconst TokenForm = ({ onSubmit, disabled, initialOwner }) => {\r\n  const [isScanning, toggleScanning, setScanning] = useToggle(false);\r\n\r\n  const onScan = setFieldValue => result => {\r\n    if (Web3.utils.isAddress(result)) {\r\n      setFieldValue(\"initialOwner\", result);\r\n      setScanning(false);\r\n    }\r\n  };\r\n\r\n  const onError = err => {\r\n    console.log(\"Error while scanning address: \" + err);\r\n    setScanning(false);\r\n  };\r\n\r\n  const handleSubmitFormik = (values, { setSubmitting }) => {\r\n    onSubmit(values);\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const handleValidation = values => {\r\n    let errors = {};\r\n\r\n    if (!values.tokenName || values.tokenName.trim() === \"\") {\r\n      errors.tokenName = \"Token name is required\";\r\n    } else if (!/^[a-zA-Z0-9 ]{1,20}$/.test(values.tokenName.trim())) {\r\n      errors.tokenName =\r\n        \"Token name must contain between 1 and 20 letters, numbers or spaces\";\r\n    }\r\n\r\n    if (!values.tokenSymbol || values.tokenSymbol.trim() === \"\") {\r\n      errors.tokenSymbol = \"Token symbol is required\";\r\n    } else if (!/^[a-zA-Z]{2,10}$/.test(values.tokenSymbol.trim())) {\r\n      errors.tokenSymbol = \"Token symbol must contain between 2 and 10 letters\";\r\n    }\r\n\r\n    if (!values.initialAmount) {\r\n      errors.initialAmount = \"Initial amount is required\";\r\n    } else if (!/^[0-9]{1,10}$/.test(values.initialAmount)) {\r\n      errors.initialAmount =\r\n        \"Amount must be an integer number between 1 and 1 bi\";\r\n    } else {\r\n      const number = parseInt(values.initialAmount);\r\n      if (number < 1 || number > 1000000000) {\r\n        errors.initialAmount =\r\n          \"Amount must be an integer number between 1 and 1 bi\";\r\n      }\r\n    }\r\n\r\n    if (!values.initialOwner) {\r\n      errors.initialOwner = \"Initial owner is required\";\r\n    } else if (!Web3.utils.isAddress(values.initialOwner)) {\r\n      errors.initialOwner = \"Enter a valid ETH address\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <StyledDiv>\r\n      <Formik\r\n        initialValues={{\r\n          tokenName: \"\",\r\n          tokenSymbol: \"\",\r\n          initialAmount: 0,\r\n          initialOwner\r\n        }}\r\n        validate={handleValidation}\r\n        onSubmit={handleSubmitFormik}\r\n        render={({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"needs-validation\" noValidate>\r\n            <TokenField\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              fieldName=\"tokenName\"\r\n              label=\"Token name\"\r\n              placeholder=\"Enter token name\"\r\n              helpText=\"E.g. TestCoin\"\r\n              maxLength={20}\r\n              disabled={disabled}\r\n            />\r\n            <TokenField\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              fieldName=\"tokenSymbol\"\r\n              label=\"Token symbol\"\r\n              placeholder=\"Enter token symbol\"\r\n              helpText=\"E.g. TEST\"\r\n              maxLength={10}\r\n              disabled={disabled}\r\n            />\r\n            <TokenField\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              fieldName=\"initialAmount\"\r\n              label=\"Initial supply\"\r\n              placeholder=\"Enter the initial supply\"\r\n              helpText=\"E.g. 10\"\r\n              maxLength={10}\r\n              disabled={disabled}\r\n            />\r\n            <TokenField\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              fieldName=\"initialOwner\"\r\n              label=\"Initial owner\"\r\n              placeholder=\"Enter the owner address\"\r\n              helpText=\"A valid ethereum address starting with 0x...\"\r\n              maxLength={42}\r\n              disabled={disabled}\r\n              optionalButton={\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"input-group-prepend\"\r\n                  onClick={toggleScanning}\r\n                  title={\r\n                    isScanning\r\n                      ? \"Click to close camera\"\r\n                      : \"Click to open the camera and scan a QR code\"\r\n                  }\r\n                  disabled={disabled}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={isScanning ? \"window-close\" : \"qrcode\"}\r\n                  />\r\n                </button>\r\n              }\r\n              optionalExtraControl={\r\n                isScanning && (\r\n                  <QrReader onScan={onScan(setFieldValue)} onError={onError} />\r\n                )\r\n              }\r\n            />\r\n\r\n            <CreateTokenButton key=\"create\" type=\"submit\" disabled={disabled}>\r\n              Create Token!{\" \"}\r\n              {/* <span role=\"img\" aria-label=\"to the moon\"> */}\r\n                🚀🌙\r\n              {/* </span> */}\r\n            </CreateTokenButton>\r\n          </Form>\r\n        )}\r\n      />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default TokenForm;\r\n","// @flow\r\nimport { useState } from \"react\";\r\n\r\nexport const useToggle = (initialValue: boolean) => {\r\n  const [value, setValue] = useState<boolean>(initialValue);\r\n  const toggle = () => {\r\n    setValue(!value);\r\n  };\r\n  return [value, toggle, setValue];\r\n};\r\n","import React from \"react\";\r\n\r\nconst ExternalLink = ({ href, children }) => (\r\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {children}\r\n  </a>\r\n);\r\n\r\nexport default ExternalLink;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport posed from \"react-pose\";\r\nimport Spinner from \"react-spinkit\";\r\nimport ExternalLink from \"./ExternalLink\";\r\n\r\nexport const Steps = {\r\n  WAITING: 0,\r\n  DEPLOYING: 1,\r\n  BROADCASTING: 2,\r\n  DEPLOYED: 3\r\n};\r\n\r\nconst StyledDiv = styled.div`\r\n  border: 1px solid black;\r\n  margin: 20px;\r\n  width: 70%;\r\n  max-width: 50rem;\r\n  padding: 1rem;\r\n  font-family: \"Lucida Console\", Monaco, monospace;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n`;\r\n\r\nconst PosedMessage = posed.div({\r\n  hidden: { y: 100, opacity: 0 },\r\n  visible: { y: 0, opacity: 1 }\r\n});\r\n\r\nconst ClippedMessage = styled(PosedMessage)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst ProgressMessage = ({ visible, children }) => {\r\n  return (\r\n    visible && (\r\n      <ClippedMessage initialPose=\"hidden\" pose=\"visible\">\r\n        {children}\r\n      </ClippedMessage>\r\n    )\r\n  );\r\n};\r\n\r\nconst StyledSpinner = styled(Spinner)`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatusBox = ({\r\n  currentStep,\r\n  cancelled,\r\n  transactionHash,\r\n  etherscanGetter,\r\n  contractAddress,\r\n  ownerAddress\r\n}) => (\r\n  <StyledDiv key=\"status\">\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYING}>\r\n      Deploying ERC20 contract...\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYING}>\r\n      Asking for contract creation transaction signature and gas payment...\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\r\n      Broadcasting contract creation to the network...\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\r\n      Transaction broadcast: <strong>{transactionHash}</strong> [\r\n      <ExternalLink\r\n        href={etherscanGetter && etherscanGetter.getTxURL(transactionHash)}\r\n      >\r\n        see on etherescan\r\n      </ExternalLink>\r\n      ]\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\r\n      Waiting for transaction confirmation...\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYED}>\r\n      <span role=\"img\" aria-label=\"kudos\">\r\n        🎉🎉🎉\r\n      </span>\r\n      <strong>FINISHED!!!</strong>\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYED}>\r\n      Contract has been created at: <strong>{contractAddress}</strong>{\" \"}\r\n      &lt;&lt;&lt; THIS IS YOUR ERC20 CONTRACT, GIVE THIS ADDRESS TO YOUR\r\n      USERS!!! [\r\n      <ExternalLink\r\n        href={\r\n          contractAddress &&\r\n          etherscanGetter &&\r\n          etherscanGetter.getAddressURL(contractAddress)\r\n        }\r\n      >\r\n        see on etherescan\r\n      </ExternalLink>\r\n      ]\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYED}>\r\n      Issued tokens address: <strong>{ownerAddress}</strong> &lt;&lt;&lt; THIS\r\n      IS THE INITIAL OWNER OF ALL ISSUED TOKENS!!! [\r\n      <ExternalLink\r\n        href={\r\n          ownerAddress &&\r\n          etherscanGetter &&\r\n          etherscanGetter.getAddressURL(ownerAddress)\r\n        }\r\n      >\r\n        see on etherescan\r\n      </ExternalLink>\r\n      ]\r\n    </ProgressMessage>\r\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYED}>\r\n      [\r\n      <ExternalLink\r\n        href={\r\n          contractAddress &&\r\n          etherscanGetter &&\r\n          etherscanGetter.getTokenURL(contractAddress)\r\n        }\r\n      >\r\n        INSPECT ON TOKEN TRACKER\r\n      </ExternalLink>\r\n      ]\r\n    </ProgressMessage>\r\n    {!cancelled &&\r\n      currentStep >= Steps.DEPLOYING &&\r\n      currentStep < Steps.DEPLOYED && <StyledSpinner name=\"three-bounce\" />}\r\n    <ProgressMessage visible={cancelled}>\r\n      <span role=\"img\" aria-label=\"cancelled\">\r\n        ❌\r\n      </span>{\" \"}\r\n      <strong>\r\n        Operation cancelled{\" \"}\r\n        <span role=\"img\" aria-label=\"sad\">\r\n          ☹️\r\n        </span>\r\n      </strong>\r\n    </ProgressMessage>\r\n  </StyledDiv>\r\n);\r\n\r\nexport default StatusBox;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport Web3 from \"web3\";\r\nimport StandardERC20Token from \"./contracts/StandardERC20Token.json\";\r\nimport GithubCorner from \"react-github-corner\";\r\nimport { PoseGroup } from \"react-pose\";\r\nimport Instructions from \"./Instructions\";\r\nimport TokenForm from \"./TokenForm\";\r\nimport StatusBox, { Steps } from \"./StatusBox\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StartButton = styled.button`\r\n  background-image: linear-gradient(to bottom right, green, yellow);\r\n  margin: 1rem;\r\n`;\r\n\r\nconst web3Options = {\r\n  transactionConfirmationBlocks: 1\r\n};\r\n\r\nconst getEtherscanURL = networkId => {\r\n  let networkPrefix;\r\n  if (networkId === 1) {\r\n    networkPrefix = \"\";\r\n  } else if (networkId === 3) {\r\n    networkPrefix = \"ropsten.\";\r\n  } else if (networkId === 4) {\r\n    networkPrefix = \"rinkeby.\";\r\n  } else if (networkId === 42) {\r\n    networkPrefix = \"kovan.\";\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    getTxURL: transactionHash =>\r\n      `https://${networkPrefix}etherscan.io/tx/${transactionHash}`,\r\n    getAddressURL: address =>\r\n      `https://${networkPrefix}etherscan.io/address/${address}`,\r\n    getTokenURL: address =>\r\n      `https://${networkPrefix}etherscan.io/token/${address}`\r\n  };\r\n};\r\n\r\nconst App = () => {\r\n  const [web3, setWeb3] = useState();\r\n  const [defaultAccount, setDefaultAccount] = useState();\r\n  const [etherscanGetter, setEtherscanGetter] = useState();\r\n  const [currentStep, setCurrentStep] = useState(Steps.WAITING);\r\n  const [cancelled, setCancelled] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [transactionHash, setTransactionHash] = useState();\r\n  const [contract, setContract] = useState();\r\n\r\n  const initializeWeb3 = async () => {\r\n    try {\r\n      // Ensure accounts are unlocked\r\n      await Web3.givenProvider.enable();\r\n    } catch (err) {\r\n      // User didn't approve access for accounts\r\n      console.log(\"User has cancelled account access permission\");\r\n    }\r\n\r\n    const _web3 = new Web3(Web3.givenProvider, null, web3Options);\r\n    const accounts = await _web3.eth.getAccounts();\r\n    setDefaultAccount(accounts[0]);\r\n    const networkId = await _web3.eth.net.getId();\r\n    setEtherscanGetter(getEtherscanURL(networkId));\r\n    setWeb3(_web3);\r\n  };\r\n\r\n  const handleTokenCreation = async values => {\r\n    setCurrentStep(Steps.DEPLOYING);\r\n\r\n    const _data = {\r\n      name: values.tokenName.trim(),\r\n      symbol: values.tokenSymbol.trim(),\r\n      decimals: 18,\r\n      initialSupply: values.initialAmount.toString() + \"0\".repeat(18),\r\n      ownerAddress: values.initialOwner\r\n    };\r\n    setData(_data);\r\n\r\n    const erc20 = new web3.eth.Contract(\r\n      StandardERC20Token.abi,\r\n      null,\r\n      web3Options\r\n    );\r\n\r\n    try {\r\n      const contract = await erc20\r\n        .deploy({\r\n          data: StandardERC20Token.bytecode,\r\n          arguments: [\r\n            _data.name,\r\n            _data.symbol,\r\n            _data.decimals,\r\n            _data.ownerAddress,\r\n            _data.initialSupply\r\n          ]\r\n        })\r\n        .send({ from: defaultAccount })\r\n        .on(\"transactionHash\", transactionHash => {\r\n          setTransactionHash(transactionHash);\r\n          setCurrentStep(Steps.BROADCASTING);\r\n        });\r\n      setContract(contract);\r\n      setCurrentStep(Steps.DEPLOYED);\r\n    } catch (err) {\r\n      // User didn't approve contract creation\r\n      setCancelled(true);\r\n      console.log(\"User has cancelled token creation\");\r\n    }\r\n  };\r\n\r\n  const lastRef = useRef(null);\r\n  useEffect(() => {\r\n    if (lastRef.current) {\r\n      lastRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>create-token-dapp</h1>\r\n        <Instructions key=\"info\" />\r\n        {web3 ? (\r\n          <TokenForm\r\n            key=\"form\"\r\n            onSubmit={handleTokenCreation}\r\n            disabled={currentStep > Steps.WAITING}\r\n            initialOwner={defaultAccount}\r\n          />\r\n        ) : (\r\n          <StartButton key=\"begin\" onClick={initializeWeb3}>\r\n            Begin!\r\n          </StartButton>\r\n        )}\r\n        <PoseGroup>\r\n          {currentStep >= Steps.DEPLOYING && (\r\n            <React.Fragment key=\"status\">\r\n              <StatusBox\r\n                currentStep={currentStep}\r\n                cancelled={cancelled}\r\n                transactionHash={transactionHash}\r\n                etherscanGetter={etherscanGetter}\r\n                contractAddress={contract && contract.options.address}\r\n                ownerAddress={data && data.ownerAddress}\r\n              />\r\n              <div ref={lastRef} />\r\n            </React.Fragment>\r\n          )}\r\n        </PoseGroup>\r\n      </header>\r\n\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}