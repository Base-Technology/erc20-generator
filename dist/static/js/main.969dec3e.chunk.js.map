{"version":3,"sources":["Instructions.jsx","hooks.js","TokenForm.jsx","TokenVerifyForm.jsx","CsvReader.jsx","TokenAirdropForm.jsx","ExternalLink.jsx","StatusBox.jsx","App.js","constants.js","serviceWorker.js","index.js"],"names":["StyledDiv","styled","div","_templateObject","_taggedTemplateLiteral","Instructions","React","createElement","useToggle","initialValue","_useState","useState","_useState2","_slicedToArray","value","setValue","library","add","faQrcode","faWindowClose","CreateTokenButton","button","_templateObject2","TokenField","_ref","values","errors","touched","fieldName","label","placeholder","helpText","maxLength","disabled","optionalButton","optionalExtraControl","className","concat","htmlFor","Field","type","name","id","required","TokenForm","_ref2","onSubmit","initialOwner","_useToggle","_useToggle2","Formik","initialValues","tokenName","tokenSymbol","initialAmount","mintingAndBurningSupport","airdropSupport","validate","trim","test","number","parseInt","_ref3","setSubmitting","render","_ref4","setFieldValue","Form","noValidate","checked","key","networkOptions","component","onChange","e","target","map","option","TokenVerifyForm","style","width","fontSize","contractAddress","network","CsvReader","props","csvData","setCsvData","file","files","Papa","parse","header","complete","results","data","onData","borderCollapse","border","row","i","Object","j","web3","Web3","TokenAirdropForm","airdropData","utils","isAddress","_data$reduce","reduce","acc","curr","push","toWei","_data$reduce2","addresses","amounts","handleCsvData","ExternalLink","href","children","rel","Steps","PosedMessage","posed","hidden","y","opacity","visible","ClippedMessage","ProgressMessage","initialPose","pose","StyledSpinner","Spinner","_templateObject3","StatusBox","currentStep","cancelled","transactionHash","etherscanGetter","ownerAddress","getTxURL","role","aria-label","getAddressURL","getTokenURL","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","catch","thrown","delegateYield","StartButton","web3Options","transactionConfirmationBlocks","getEtherscanURL","networkId","networkPrefix","address","App","setWeb3","_useState3","_useState4","setState","_useState5","_useState6","defaultAccount","setDefaultAccount","_useState7","_useState8","setEtherscanGetter","_useState9","_useState10","setCurrentStep","_useState11","_useState12","setCancelled","_useState13","_useState14","setData","_useState15","_useState16","setTransactionHash","_useState17","_useState18","contract","setContract","initializeWeb3","_asyncToGenerator","_callee","_web3","_state","accounts","_context","givenProvider","enable","t0","console","log","eth","getAccounts","net","getId","apply","arguments","initializeWeb3Airdrop","_callee2","_context2","initializeWeb3Verify","_callee3","_context3","handleTokenCreation","_callee4","_data","erc20","args","bytecode","_contract","_context4","symbol","decimals","initialSupply","toString","repeat","Contract","BaseToken_U_A","abi","BaseToken_U","deploy","send","from","on","_x","handleAirdrop","_ref5","_callee5","_context5","methods","Airdrop","_x2","handleVerify","_ref6","_callee6","_context6","fetch","response","text","alert","_x3","lastRef","useRef","useEffect","current","scrollIntoView","behavior","selectedComponent","Map","get","onClick","PoseGroup","Fragment","options","ref","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.969dec3e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  text-align: left;\n\n  ul {\n    list-style-type: none;\n    margin: 0rem;\n  }\n\n  ul > li:before {\n    content: \"✅ \";\n    margin-left: -1.5rem;\n  }\n`;\n\nconst Instructions = () => (\n  <StyledDiv>\n    {/* <ul>\n      <li>Fill the information bellow</li>\n      <li>Press \"Create Token!\" and pay for the gas</li>\n      <li>Wait for the contract to be created on the blockchain</li>\n      <li>\n        Profit!{\" \"}\n        <span role=\"img\" aria-label=\"unicorn\">\n          🦄\n        </span>\n      </li>\n    </ul> */}\n  </StyledDiv>\n);\n\nexport default Instructions;\n","// @flow\nimport { useState } from \"react\";\n\nexport const useToggle = (initialValue: boolean) => {\n  const [value, setValue] = useState<boolean>(initialValue);\n  const toggle = () => {\n    setValue(!value);\n  };\n  return [value, toggle, setValue];\n};\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport { useToggle } from \"./hooks\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faQrcode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faQrcode);\nlibrary.add(faWindowClose);\n\nconst StyledDiv = styled.div`\n  border: 3px solid #ececec;\n  border-radius: 8px;\n  text-align: left;\n  margin: 1rem;\n  padding: 1rem;\n  width: 600px;\n`;\n\nconst CreateTokenButton = styled.button`\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-weight: bold;\n  font-size: 1rem;\n  margin: 1rem;\n  float: right; /* added */\n`;\n\nconst TokenField = ({\n  values,\n  errors,\n  touched,\n  fieldName,\n  label,\n  placeholder,\n  helpText,\n  maxLength,\n  disabled,\n  optionalButton,\n  optionalExtraControl\n}) => (\n  <div\n    className={`form-group ${errors[fieldName] && touched[fieldName] ? \"text-danger\" : null\n      }`}\n  >\n    <label htmlFor={fieldName}>{label}</label>\n    <div className=\"input-group\">\n      <Field\n        className={`form-control ${errors[fieldName] && touched[fieldName] ? \"is-invalid\" : null\n          }`}\n        type=\"text\"\n        name={fieldName}\n        id={fieldName}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        disabled={disabled}\n        value={values[fieldName]}\n        required\n      />\n      {optionalButton}\n      {errors[fieldName] && touched[fieldName] && (\n        <div className=\"invalid-feedback\">{errors[fieldName]}</div>\n      )}\n    </div>\n    {optionalExtraControl}\n    <small className=\"form-text text-muted\">{helpText}</small>\n  </div>\n);\n\nconst TokenForm = ({ onSubmit, disabled, initialOwner }) => {\n  const [isScanning, toggleScanning, setScanning] = useToggle(false);\n\n  const onScan = setFieldValue => result => {\n    if (Web3.utils.isAddress(result)) {\n      setFieldValue(\"initialOwner\", result);\n      setScanning(false);\n    }\n  };\n\n  const onError = err => {\n    console.log(\"Error while scanning address: \" + err);\n    setScanning(false);\n  };\n\n  const handleSubmitFormik = (values, { setSubmitting }) => {\n    onSubmit(values);\n    setSubmitting(false);\n  };\n\n\n  const handleValidation = values => {\n    let errors = {};\n\n    if (!values.tokenName || values.tokenName.trim() === \"\") {\n      errors.tokenName = \"Token name is required\";\n    } else if (!/^[a-zA-Z0-9 ]{1,20}$/.test(values.tokenName.trim())) {\n      errors.tokenName =\n        \"Token name must contain between 1 and 20 letters, numbers or spaces\";\n    }\n\n    if (!values.tokenSymbol || values.tokenSymbol.trim() === \"\") {\n      errors.tokenSymbol = \"Token symbol is required\";\n    } else if (!/^[a-zA-Z]{2,10}$/.test(values.tokenSymbol.trim())) {\n      errors.tokenSymbol = \"Token symbol must contain between 2 and 10 letters\";\n    }\n\n    if (!values.initialAmount) {\n      errors.initialAmount = \"Initial amount is required\";\n    } else if (!/^[0-9]{1,13}$/.test(values.initialAmount)) {\n      errors.initialAmount =\n        \"Amount must be an integer number between 1 and 1000 bi\";\n    } else {\n      const number = parseInt(values.initialAmount);\n      if (number < 1 || number > 1000000000000) {\n        errors.initialAmount =\n          \"Amount must be an integer number between 1 and 1000 bi\";\n      }\n    }\n\n    return errors;\n  };\n  \n  return (\n    <StyledDiv>\n      <Formik\n        initialValues={{\n          tokenName: \"\",\n          tokenSymbol: \"\",\n          initialAmount: 1000000000000,\n          initialOwner,\n          mintingAndBurningSupport: true, // added\n          airdropSupport: true\n        }}\n        validate={handleValidation}\n        onSubmit={handleSubmitFormik}\n        render={({ values, errors, touched, setFieldValue }) => (\n          <Form className=\"needs-validation\" noValidate>\n            <TokenField\n              values={values}\n              errors={errors}\n              touched={touched}\n              fieldName=\"tokenName\"\n              label=\"Token name\"\n              placeholder=\"Enter token name\"\n              helpText=\"E.g. TestCoin\"\n              maxLength={20}\n              disabled={disabled}\n            />\n            <TokenField\n              values={values}\n              errors={errors}\n              touched={touched}\n              fieldName=\"tokenSymbol\"\n              label=\"Token symbol\"\n              placeholder=\"Enter token symbol\"\n              helpText=\"E.g. TSC\"\n              maxLength={10}\n              disabled={disabled}\n            />\n            <TokenField\n              values={values}\n              errors={errors}\n              touched={touched}\n              fieldName=\"initialAmount\"\n              label=\"Initial amount\"\n              placeholder=\"Enter initial amount\"\n              helpText=\"E.g. 1000\"\n              maxLength={13}\n              disabled={disabled}\n            />\n            <div className=\"form-group\">\n              <label htmlFor=\"mintingAndBurningSupport\">Minting & Burning Support</label>\n              <div className=\"custom-control custom-switch custom-switch-lg\">\n                <Field\n                  className=\"custom-control-input\"\n                  type=\"checkbox\"\n                  name=\"mintingAndBurningSupport\"\n                  id=\"mintingAndBurningSupport\"\n                  checked={values.mintingAndBurningSupport}\n                  disabled={true}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"mintingAndBurningSupport\"></label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"airdropSupport\">Airdrop Support</label>\n              <div className=\"custom-control custom-switch custom-switch-lg\">\n                <Field\n                  className=\"custom-control-input\"\n                  type=\"checkbox\"\n                  name=\"airdropSupport\"\n                  id=\"airdropSupport\"\n                  checked={values.airdropSupport}\n                />\n                <label className=\"custom-control-label\" htmlFor=\"airdropSupport\"></label>\n              </div>\n            </div>\n\n\n            <CreateTokenButton key=\"verify\" type=\"submit\" disabled={disabled}>\n                Create Token!\n                🚀🌙\n              </CreateTokenButton>\n          </Form>\n        )}\n      />\n    </StyledDiv>\n  );\n};\n\nexport default TokenForm;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport { useToggle } from \"./hooks\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faWindowClose);\n\nconst StyledDiv = styled.div`\n  border: 3px solid #ececec;\n  border-radius: 8px;\n  text-align: left;\n  margin: 1rem;\n  padding: 1rem;\n`;\n\nconst CreateTokenButton = styled.button`\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-weight: bold;\n  font-size: 1rem;\n  margin: 1rem;\n  float: right; /* added */\n`;\n\nconst networkOptions = [\n  { value: \"bscTestnet\", label: \"BSC Testnet\" },\n];\n\nconst TokenField = ({\n  values,\n  errors,\n  touched,\n  fieldName,\n  label,\n  placeholder,\n  helpText,\n  maxLength,\n  disabled,\n  optionalButton,\n  optionalExtraControl,\n  setFieldValue\n}) => (\n  <div\n    className={`form-group ${errors[fieldName] && touched[fieldName] ? \"text-danger\" : null\n      }`}\n  >\n    <label htmlFor={fieldName}>{label}</label>\n    <div className=\"input-group\">\n      {fieldName === \"network\" ? (\n        <Field\n          className={`form-control ${errors[fieldName] && touched[fieldName] ? \"is-invalid\" : null}`}\n          component=\"select\"\n          name={fieldName}\n          id={fieldName}\n          disabled={disabled}\n          required\n          onChange={(e) => setFieldValue(fieldName, e.target.value)}\n          value={values[fieldName]}\n        >\n          <option value=\"\" disabled>Select network</option>\n          {networkOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Field>\n\n\n      ) : (\n        <Field\n          className={`form-control ${errors[fieldName] && touched[fieldName] ? \"is-invalid\" : null\n            }`}\n          type=\"text\"\n          name={fieldName}\n          id={fieldName}\n          placeholder={placeholder}\n          maxLength={maxLength}\n          disabled={disabled}\n          value={values[fieldName]}\n          required\n        />\n      )}\n      {optionalButton}\n      {errors[fieldName] && touched[fieldName] && (\n        <div className=\"invalid-feedback\">{errors[fieldName]}</div>\n      )}\n    </div>\n    {optionalExtraControl}\n    <small className=\"form-text text-muted\">{helpText}</small>\n  </div>\n);\n\nconst TokenVerifyForm = ({ onSubmit, disabled }) => {\n  const [isScanning, toggleScanning, setScanning] = useToggle(false);\n  const onError = err => {\n    console.log(\"Error while scanning address: \" + err);\n    setScanning(false);\n  };\n\n  const handleSubmitVerify = (values, { setSubmitting }) => {\n    onSubmit(values);\n    setSubmitting(false);\n  };\n\n  const handleValidationVerify = values => {\n    let errors = {};\n\n    if (!values.contractAddress) {\n      errors.contractAddress = \"Contract address is required\";\n    }\n    return errors;\n  };\n  \n\n  return (\n    <StyledDiv>\n      <div style={{ width: 500, fontSize: 20 }}>\n        <Formik\n        initialValues={{\n          contractAddress: \"\",\n          network: \"\",\n        }}\n          validate={handleValidationVerify}\n          onSubmit={handleSubmitVerify}\n          render={({ values, errors, touched, setFieldValue }) => (\n            <Form className=\"needs-validation\" noValidate>\n              <TokenField\n                values={values}\n                errors={errors}\n                touched={touched}\n                fieldName=\"contractAddress\"\n                label=\"Contract Address\"\n                placeholder=\"Enter the contract address\"\n                helpText=\"A valid ethereum address starting with 0x...\"\n                disabled={disabled}\n                setFieldValue={setFieldValue} // added\n              />\n              <TokenField\n                values={values}\n                errors={errors}\n                touched={touched}\n                fieldName=\"network\"\n                label=\"Network\"\n                placeholder=\"Enter the network\"\n                helpText=\"A valid network\"\n                disabled={disabled}\n                setFieldValue={setFieldValue} // added\n              />\n              <Field type=\"hidden\" name=\"verifyData\" />\n              <CreateTokenButton key=\"verify\" type=\"submit\" disabled={disabled}>\n                Verify!\n                🚀🌙\n              </CreateTokenButton>\n            </Form>\n          )}\n        />\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default TokenVerifyForm;\n\n\n\n","import React, { useState } from 'react';\nimport Papa from 'papaparse';\nfunction CsvReader(props) {\n  const [csvData, setCsvData] = useState([]);\n  const handleCsvFile = (e) => {\n    const file = e.target.files[0];\n    Papa.parse(file, {\n      header: false,\n      complete: (results) => {\n        setCsvData(results.data);\n        props.onData(results.data);\n      },\n    });\n  };\n  return (\n    <div>\n      <input type=\"file\" onChange={handleCsvFile} />\n      <table style={{ fontSize: '14px', borderCollapse: 'collapse', border: '1px solid black' }}>\n        <tbody>\n          {csvData.map((row, i) => (\n            <tr key={i}>\n              {Object.values(row).map((value, j) => (\n                <td key={j} style={{ border: '1px solid black' }}>{value}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default CsvReader; \n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport QrReader from \"react-qr-reader\";\nimport { useToggle } from \"./hooks\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQrcode } from \"@fortawesome/free-solid-svg-icons\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { parse } from \"papaparse\";\nimport CsvReader from \"./CsvReader\";\n\nlibrary.add(faQrcode);\nlibrary.add(faWindowClose);\n\nconst web3 = new Web3();\n\nconst StyledDiv = styled.div`\n  border: 3px solid #ececec;\n  border-radius: 8px;\n  text-align: left;\n  margin: 1rem;\n  padding: 1rem;\n`;\n\nconst CreateTokenButton = styled.button`\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-weight: bold;\n  font-size: 1rem;\n  margin: 1rem;\n  float: right; /* added */\n`;\n\nconst TokenField = ({\n  values,\n  errors,\n  touched,\n  fieldName,\n  label,\n  placeholder,\n  helpText,\n  maxLength,\n  disabled,\n  optionalButton,\n  optionalExtraControl\n}) => (\n  <div\n    className={`form-group ${errors[fieldName] && touched[fieldName] ? \"text-danger\" : null\n      }`}\n  >\n    <label htmlFor={fieldName}>{label}</label>\n    <div className=\"input-group\">\n      <Field\n        className={`form-control ${errors[fieldName] && touched[fieldName] ? \"is-invalid\" : null\n          }`}\n        type=\"text\"\n        name={fieldName}\n        id={fieldName}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        disabled={disabled}\n        value={values[fieldName]}\n        required\n      />\n      {optionalButton}\n      {errors[fieldName] && touched[fieldName] && (\n        <div className=\"invalid-feedback\">{errors[fieldName]}</div>\n      )}\n    </div>\n    {optionalExtraControl}\n    <small className=\"form-text text-muted\">{helpText}</small>\n  </div>\n);\n\nconst TokenAirdropForm = ({ onSubmit, disabled }) => {\n  const [isScanning, toggleScanning, setScanning] = useToggle(false);\n  const onError = err => {\n    console.log(\"Error while scanning address: \" + err);\n    setScanning(false);\n  };\n\n  const handleSubmitAirdrop = (values, { setSubmitting }) => {\n    onSubmit(values);\n    setSubmitting(false);\n  };\n\n  const handleValidationAirdrop = values => {\n    let errors = {};\n\n    if (!values.contractAddress) {\n      errors.contractAddress = \"Contract address is required\";\n    } else if (!Web3.utils.isAddress(values.contractAddress)) {\n      errors.contractAddress = \"Enter a valid contract address\";\n    }\n\n    return errors;\n  };\n\n  const handleCsvData = (data, setFieldValue) => {\n    const [addresses, amounts] = data.reduce((acc, curr) => {\n      acc[0].push(curr[0]);\n      acc[1].push(web3.utils.toWei(curr[1], 'ether'));\n      return acc;\n    }, [[], []]);\n    setFieldValue(\"airdropData\", { addresses, amounts });\n  };\n  \n\n  return (\n    <StyledDiv>\n      <div style={{ width: 500, fontSize: 20 }}>\n        <Formik\n        initialValues={{\n          contractAddress: \"\",\n          airdropData: \"\",\n        }}\n          validate={handleValidationAirdrop}\n          onSubmit={handleSubmitAirdrop}\n          render={({ values, errors, touched, setFieldValue }) => (\n            <Form className=\"needs-validation\" noValidate>\n              <TokenField\n                values={values}\n                errors={errors}\n                touched={touched}\n                fieldName=\"contractAddress\"\n                label=\"Contract Address\"\n                placeholder=\"Enter the contract address\"\n                helpText=\"A valid ethereum address starting with 0x...\"\n                disabled={disabled}\n              />\n              <Field type=\"hidden\" name=\"airdropData\" />\n              <CsvReader onData={(data) => handleCsvData(data,setFieldValue)}/>\n              <CreateTokenButton key=\"airdrop\" type=\"submit\" disabled={disabled}>\n                Airdrop!\n                🚀🌙\n              </CreateTokenButton>\n            </Form>\n          )}\n        />\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default TokenAirdropForm;\n","import React from \"react\";\n\nconst ExternalLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </a>\n);\n\nexport default ExternalLink;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\nimport Spinner from \"react-spinkit\";\nimport ExternalLink from \"./ExternalLink\";\n\nexport const Steps = {\n  WAITING: 0,\n  DEPLOYING: 1,\n  BROADCASTING: 2,\n  DEPLOYED: 3,\n  AIRDROPED: 4,\n  VERIFIED: 5\n};\n\nconst StyledDiv = styled.div`\n  border: 1px solid black;\n  margin: 20px;\n  width: 70%;\n  max-width: 50rem;\n  padding: 1rem;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  font-size: 1rem;\n  text-align: left;\n`;\n\nconst PosedMessage = posed.div({\n  hidden: { y: 100, opacity: 0 },\n  visible: { y: 0, opacity: 1 }\n});\n\nconst ClippedMessage = styled(PosedMessage)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ProgressMessage = ({ visible, children }) => {\n  return (\n    visible && (\n      <ClippedMessage initialPose=\"hidden\" pose=\"visible\">\n        {children}\n      </ClippedMessage>\n    )\n  );\n};\n\nconst StyledSpinner = styled(Spinner)`\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst StatusBox = ({\n  currentStep,\n  cancelled,\n  transactionHash,\n  etherscanGetter,\n  contractAddress,\n  ownerAddress\n}) => (\n  <StyledDiv key=\"status\">\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYING}>\n      Processing...\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYING}>\n      Asking for transaction signature and gas payment...\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\n      Broadcasting contract creation to the network...\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\n      Transaction broadcast: <strong>{transactionHash}</strong> [\n      <ExternalLink\n        href={etherscanGetter && etherscanGetter.getTxURL(transactionHash)}\n      >\n        see on etherescan\n      </ExternalLink>\n      ]\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep >= Steps.BROADCASTING}>\n      Waiting for transaction confirmation...\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep >= Steps.DEPLOYED}>\n      <span role=\"img\" aria-label=\"kudos\">\n        🎉🎉🎉\n      </span>\n      <strong>FINISHED!!!</strong>\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep == Steps.DEPLOYED}>\n      Contract has been created at: <strong>{contractAddress}</strong>{\" \"}\n      &lt;&lt;&lt; THIS IS YOUR ERC20 CONTRACT, GIVE THIS ADDRESS TO YOUR\n      USERS!!! [\n      <ExternalLink\n        href={\n          contractAddress &&\n          etherscanGetter &&\n          etherscanGetter.getAddressURL(contractAddress)\n        }\n      >\n        see on etherescan\n      </ExternalLink>\n      ]\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep == Steps.DEPLOYED}>\n      Issued tokens address: <strong>{ownerAddress}</strong> &lt;&lt;&lt; THIS\n      IS THE INITIAL OWNER OF ALL ISSUED TOKENS!!! [\n      <ExternalLink\n        href={\n          ownerAddress &&\n          etherscanGetter &&\n          etherscanGetter.getAddressURL(ownerAddress)\n        }\n      >\n        see on etherescan\n      </ExternalLink>\n      ]\n    </ProgressMessage>\n    <ProgressMessage visible={currentStep == Steps.DEPLOYED}>\n      [\n      <ExternalLink\n        href={\n          contractAddress &&\n          etherscanGetter &&\n          etherscanGetter.getTokenURL(contractAddress)\n        }\n      >\n        INSPECT ON TOKEN TRACKER\n      </ExternalLink>\n      ]\n    </ProgressMessage>\n    {!cancelled &&\n      currentStep >= Steps.DEPLOYING &&\n      currentStep < Steps.DEPLOYED && <StyledSpinner name=\"three-bounce\" />}\n    <ProgressMessage visible={cancelled}>\n      <span role=\"img\" aria-label=\"cancelled\">\n        ❌\n      </span>{\" \"}\n      <strong>\n        Operation cancelled{\" \"}\n        <span role=\"img\" aria-label=\"sad\">\n          ☹️\n        </span>\n      </strong>\n    </ProgressMessage>\n  </StyledDiv>\n);\n\nexport default StatusBox;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport BaseToken from \"./contracts/artifacts/contracts/BaseToken/BaseToken.sol/BaseToken.json\";\nimport BaseToken_A from \"./contracts/artifacts/contracts/BaseToken/BaseToken_A.sol/BaseToken_A.json\";\nimport BaseToken_U from \"./contracts/artifacts/contracts/BaseToken/BaseToken_U.sol/BaseToken_U.json\";\nimport BaseToken_U_A from \"./contracts/artifacts/contracts/BaseToken/BaseToken_U_A.sol/BaseToken_U_A.json\";\nimport BaseToken_T from \"./contracts/artifacts/contracts/BaseToken/BaseToken_T.sol/BaseToken_T.json\";\nimport BaseToken_T_A from \"./contracts/artifacts/contracts/BaseToken/BaseToken_T_A.sol/BaseToken_T_A.json\";\n\nimport { PoseGroup } from \"react-pose\";\nimport Instructions from \"./Instructions\";\nimport TokenForm from \"./TokenForm\";\nimport TokenVerifyForm from \"./TokenVerifyForm\";\nimport TokenAirdropForm from \"./TokenAirdropForm\";\nimport StatusBox, { Steps } from \"./StatusBox\";\nimport styled from \"styled-components\";\nimport { API_URL } from \"./constants\";\n\nconst StartButton = styled.button`\n  background-image: linear-gradient(to bottom right, green, yellow);\n  margin: 1rem;\n`;\n\nconst web3Options = {\n  transactionConfirmationBlocks: 1\n};\n\nconst getEtherscanURL = networkId => {\n  let networkPrefix;\n  if (networkId === 1) {\n    networkPrefix = \"\";\n  } else if (networkId === 3) {\n    networkPrefix = \"ropsten.\";\n  } else if (networkId === 4) {\n    networkPrefix = \"rinkeby.\";\n  } else if (networkId === 42) {\n    networkPrefix = \"kovan.\";\n  } else {\n    return null;\n  }\n\n  return {\n    getTxURL: transactionHash =>\n      `https://${networkPrefix}etherscan.io/tx/${transactionHash}`,\n    getAddressURL: address =>\n      `https://${networkPrefix}etherscan.io/address/${address}`,\n    getTokenURL: address =>\n      `https://${networkPrefix}etherscan.io/token/${address}`\n  };\n};\n\nconst App = () => {\n  const [web3, setWeb3] = useState();\n  const [state, setState] = useState();\n  const [defaultAccount, setDefaultAccount] = useState();\n  const [etherscanGetter, setEtherscanGetter] = useState();\n  const [currentStep, setCurrentStep] = useState(Steps.WAITING);\n  const [cancelled, setCancelled] = useState(false);\n  const [data, setData] = useState();\n  const [transactionHash, setTransactionHash] = useState();\n  const [contract, setContract] = useState();\n\n  const initializeWeb3 = async () => {\n    try {\n      // Ensure accounts are unlocked\n      await Web3.givenProvider.enable();\n    } catch (err) {\n      // User didn't approve access for accounts\n      console.log(\"User has cancelled account access permission\");\n    }\n\n    const _web3 = new Web3(Web3.givenProvider, null, web3Options);\n    const _state = 0;\n    const accounts = await _web3.eth.getAccounts();\n    setDefaultAccount(accounts[0]);\n    const networkId = await _web3.eth.net.getId();\n    setEtherscanGetter(getEtherscanURL(networkId));\n    setWeb3(_web3);\n    setState(_state);\n  };\n\n  const initializeWeb3Airdrop = async () => {\n    try {\n      // Ensure accounts are unlocked\n      await Web3.givenProvider.enable();\n    } catch (err) {\n      // User didn't approve access for accounts\n      console.log(\"User has cancelled account access permission\");\n    }\n\n    const _web3 = new Web3(Web3.givenProvider, null, web3Options);\n    const _state = 1;\n    const accounts = await _web3.eth.getAccounts();\n    setDefaultAccount(accounts[0]);\n    const networkId = await _web3.eth.net.getId();\n    setEtherscanGetter(getEtherscanURL(networkId));\n    setWeb3(_web3);\n    setState(_state);\n  };\n\n  const initializeWeb3Verify = async () => {\n    try {\n      // Ensure accounts are unlocked\n      await Web3.givenProvider.enable();\n    } catch (err) {\n      // User didn't approve access for accounts\n      console.log(\"User has cancelled account access permission\");\n    }\n\n    const _web3 = new Web3(Web3.givenProvider, null, web3Options);\n    const _state = 2;\n    const accounts = await _web3.eth.getAccounts();\n    setDefaultAccount(accounts[0]);\n    const networkId = await _web3.eth.net.getId();\n    setEtherscanGetter(getEtherscanURL(networkId));\n    setWeb3(_web3);\n    setState(_state);\n  };\n\n  const handleTokenCreation = async values => {\n    setCurrentStep(Steps.DEPLOYING);\n\n    const _data = {\n      name: values.tokenName.trim(),\n      symbol: values.tokenSymbol.trim(),\n      decimals: 18,\n      initialSupply: values.initialAmount.toString() + \"0\".repeat(18),\n      ownerAddress: values.initialOwner\n    };\n    setData(_data);\n\n    const erc20 = new web3.eth.Contract(\n      BaseToken_U_A.abi,\n      null,\n      web3Options\n    );\n\n    var args  = [\n      _data.name,\n      _data.symbol,\n      _data.decimals,\n      _data.initialSupply\n    ]\n    var bytecode = BaseToken_U_A.bytecode\n    if (!values.airdropSupport){\n      bytecode = BaseToken_U.bytecode\n    }\n\n    try {\n      const contract = await erc20\n        .deploy({\n          data: bytecode,\n          arguments: args\n        })\n        .send({ from: defaultAccount })\n        .on(\"transactionHash\", transactionHash => {\n          setTransactionHash(transactionHash);\n          setCurrentStep(Steps.BROADCASTING);\n        });\n      setContract(contract);\n      setCurrentStep(Steps.DEPLOYED);\n    } catch (err) {\n      // User didn't approve contract creation\n      setCancelled(true);\n      console.log(\"User has cancelled token creation\");\n    }\n  };\n\n  const handleAirdrop = async values => {\n    setCurrentStep(Steps.DEPLOYING);\n\n    const _data = {\n      contractAddress: values.contractAddress.trim(),\n      addresses: values.airdropData.addresses,\n      amounts: values.airdropData.amounts\n    };\n    setData(_data);\n\n    const erc20 = new web3.eth.Contract(BaseToken_U_A.abi, _data.contractAddress);\n\n    try {\n      await erc20.methods.Airdrop(_data.addresses, _data.amounts)\n        .send({ from: defaultAccount })\n        .on(\"transactionHash\", transactionHash => {\n          setTransactionHash(transactionHash);\n          setCurrentStep(Steps.BROADCASTING);\n        });\n      setContract(contract);\n      setCurrentStep(Steps.AIRDROPED);\n    } catch (err) {\n      // User didn't approve contract creation\n      setCancelled(true);\n      console.log(\"User has cancelled token creation\");\n    }\n  };\n\nconst handleVerify = async values => {\n    setCurrentStep(Steps.DEPLOYING);\n\n    const _data = {\n      contractAddress: values.contractAddress.trim(),\n      network: values.network,\n    };\n    setData(_data);\n    \n    fetch(`${API_URL}/${_data.contractAddress}/${_data.network}`)\n    .then(response => response.text())\n    .then(data => {\n        setCurrentStep(Steps.VERIFIED);\n    })\n    .catch(error => {\n      alert(\"An error occurred. Please try again later.\" + error);\n    });\n  };\n\n\n\n  const lastRef = useRef(null);\n  useEffect(() => {\n    if (lastRef.current) {\n      lastRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  });\n// Initialize a map with key as state and value as TokenForm component\nconst stateToTokenFormMap = new Map([\n  [0, <TokenForm key=\"form\" onSubmit={handleTokenCreation} disabled={currentStep > Steps.WAITING} />],\n  [1, <TokenAirdropForm key=\"airdropForm\" onSubmit={handleAirdrop} disabled={currentStep > Steps.WAITING} />],\n  [2, <TokenVerifyForm key=\"verifyForm\" onSubmit={handleVerify} disabled={currentStep > Steps.WAITING} />]\n]);\n\nconst selectedComponent = stateToTokenFormMap.get(state);\n\nreturn (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Base Token Hub</h1>\n      <Instructions key=\"info\" />\n      {web3 ? selectedComponent : (\n          <div>\n          <StartButton key=\"begin\" onClick={initializeWeb3}>\n            Create!\n          </StartButton>\n          <StartButton key=\"airdrop\" onClick={initializeWeb3Airdrop}>\n            Airdrop!\n          </StartButton>\n          <StartButton key=\"verify\" onClick={initializeWeb3Verify}>\n            Verify!\n          </StartButton>\n          </div>\n        )\n        }\n        <PoseGroup>\n          {currentStep >= Steps.DEPLOYING && (\n            <React.Fragment key=\"status\">\n              <StatusBox\n                currentStep={currentStep}\n                cancelled={cancelled}\n                transactionHash={transactionHash}\n                etherscanGetter={etherscanGetter}\n                contractAddress={contract && contract.options.address}\n              />\n              <div ref={lastRef} />\n            </React.Fragment>\n          )}\n        </PoseGroup>\n      </header>\n      <hr />\n    </div>\n  );\n};\n\nexport default App;","// Define a global constant and export it with a URL value\nexport const API_URL = 'http://147.182.251.92:23522/verify';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}